# fc_infoGame.krb

init_player
    foreach
        infoGame.initGame()
    assert
        python import sys
        python sys.path.append("src/main/modules/game/")
        python from manageGames import *

        # Vamos a crear el juego
        python global game
        python game = ManageGames.createGame("Ejercicio 1")
        python game.createTeam("NS")
        python game.createTeam("EO")

        python game.createPlayer("N", "NS")
        python game.createPlayer("E", "EO")
        python game.createPlayer("S", "NS")
        python game.createPlayer("O", "EO")


        # Objects initialized
        infoGame.initialized()


        


activar_evals
    foreach
        infoGame.sale($playerSale, 1, $numCarta, $palo)
        check $numCarta <= 9

        # Atributos que se pueden evaluar
        infoGame.compi($playerSale, $compi)
        infoGame.jugadorIzquierda($playerSale, $jugIzq)
    assert
        # New rules to evaluate
        infoGame.mayores($compi, $numCarta, $palo)
        infoGame.mayores($jugIzq, $numCarta, $palo)


mayores_eval
    foreach
        infoGame.mayores($player, $numCarta, $palo)

        # Vamos a ver, con las cartas que tenga ese jugador del palo,
        #   el numero de cartas mayores que numCarta
        python tot = 0

        forall
            infoGame.tiene($player, $numCarta2, $palo)

            check $numCarta2 > $numCarta
            python tot += 1

        $tot = int(tot)
    assert
        # Escribir en el fichero de conclusiones
        python phrase_explained = "\nEl jugador %s tiene %d cartas mayores que la carta de salida(%d de %s)\n" % ($player, $tot, $numCarta, $palo)

        python print(phrase_explained)
        python f = open("conclusions/conclusiones.txt", "a")
        python f.write(phrase_explained)
        python f.close()


        # Nueva regla
        infoGame.mayoresEval($player, $numCarta, $palo, $tot)



regla_del_11_2do_defensor2
    foreach
        infoGame.contrato($num, ST, $playerContrato)
        infoGame.sale($playerSale, 1, $numCarta, $palo)
        check $numCarta <= 9

        # Axiomas
        infoGame.compi($playerSale, $compi)
        infoGame.jugadorIzquierda($playerSale, $jugIzq)


        infoGame.mayoresEval($compi, $numCarta, $palo, $mayoresCompi)
        infoGame.mayoresEval($jugIzq, $numCarta, $palo, $mayoresIzq)

        python mayoresContrato = 11 - $numCarta - $mayoresCompi - $mayoresIzq

        $mayoresContrato = int(mayoresContrato)

    assert
        python print("\n\n-- Regla del 2do defensor -- Conclusion!!!!!!")
        # Escribir en el fichero de conclusiones
        python phrase_explained = "\n\t-- mayores(%s, %d, %s) ES %d!!!\n" % ($playerContrato, $numCarta, $palo, $mayoresContrato)

        python print(phrase_explained)
        python f = open("conclusions/conclusiones.txt", "a")
        python f.write(phrase_explained)
        python f.close()

        #Nueva regla
        infoGame.mayoresFromRegla($playerContrato, $numCarta, $palo, $mayoresContrato)